{"version":3,"file":"class_notes.min.js","sources":["../src/class_notes.js"],"sourcesContent":["import Modal from 'core/modal';\n//import {get_string as getString} from 'core/str';\nimport ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nexport const init = async () => {\n    document.addEventListener('click', function (event) {\n\n        if (event.target.classList.contains('block-design-ideas-btn-ai-call-class-notes')) {\n            var clickedElement = event.target;\n            // Get the data attributes\n            var promptId = clickedElement.getAttribute('data-prompt_id');\n            var sectionId = clickedElement.getAttribute('data-topic_id');\n            var courseId = clickedElement.getAttribute('data-course_id');\n\n            Modal.create({\n                title: '',\n                body: Templates.render('block_design_ideas/loader', {}),\n                large: false\n            }).then(function (modal) {\n                modal.show();\n                var loaderModal = modal;\n\n                var get_subjects = ajax.call([{\n                    methodname: 'block_design_ideas_get_section_subjects',\n                    args: {\n                        'courseid': courseId,\n                        'promptid': promptId,\n                        'sectionid': sectionId\n                    }\n                }]);\n\n                get_subjects[0].done(function (results) {\n\n                    // Close the modal\n                    loaderModal.hide();\n\n                    // Show results.generatedcontent in a modal\n                    Modal.create({\n                        title: results.section_name,\n                        body: Templates.render('block_design_ideas/class_notes', results),\n                        large: true\n                    }).then(function (modal) {\n                        // Show Modal\n                        modal.show();\n\n                        // Set a timeout so that the element can be discovered in the DOM\n                        setTimeout(function () {\n                            // Select/Deselect the checkboxes if block-design-ideas-subject-select-all is checked\n                            var selectAllCheckbox = document.getElementById('block-design-ideas-subject-select-all');\n                            if (selectAllCheckbox) {\n                                var checkboxes = document.querySelectorAll('.block-design-ideas-subject-select');\n                                selectAllCheckbox.addEventListener('change', function () {\n                                    checkboxes.forEach(function (checkbox) {\n                                        checkbox.checked = selectAllCheckbox.checked;\n                                    });\n                                });\n                            }\n\n                            // When button with class block-design-ideas-btn-create-course-topics is clicked, get all\n                            // checkboxes with class block-design-ideas-topic-select and get their data attributes, put\n                            // them in an array and call the ajax function to create topics\n                            var createSubjectsButton = document.querySelector('.block-design-ideas-btn-create-class-notes');\n                            createSubjectsButton.addEventListener('click', function () {\n                                // Hide content modal;\n                                modal.hide();\n                                // Show loader modal\n                                Modal.create({\n                                    title: '',\n                                    body: Templates.render('block_design_ideas/loader', {}),\n                                    large: false\n                                }).then(function (modal) {\n                                    modal.show();\n\n                                    // Get data attribute replace from button\n                                    var section = createSubjectsButton.getAttribute('data-section');\n                                    // Get all checkboxes with class block-design-ideas-topic-select\n                                    var selectedCheckboxes = document.querySelectorAll(\n                                        '.block-design-ideas-subject-select:checked');\n                                    var subjects = [];\n                                    selectedCheckboxes.forEach(function (checkbox) {\n                                        // Set data attributes name and summary for topics array\n                                        var subjectName = checkbox.getAttribute('data-name');\n                                        // Add to topics array\n                                        subjects.push({\n                                            name: subjectName,\n                                        });\n\n                                    });\n\n                                    // Convert topics array to JSON string\n                                    subjects = JSON.stringify(subjects);\n                                    // Call the ajax function to create topics\n                                    var create_class_notes = ajax.call([{\n                                        methodname: 'block_design_ideas_create_class_notes',\n                                        args: {\n                                            'section': section,\n                                            'courseid': courseId,\n                                            'subjects': subjects\n                                        }\n                                    }]);\n\n                                    create_class_notes[0].done(function () {\n                                        // Reload window\n                                        window.location.reload();\n                                    }).fail(function () {\n                                        alert('An error has occurred. Cannot create topics');\n                                    });\n                                });\n                            });\n\n                        }, 1000);\n                    });\n\n\n                }).fail(function () {\n                    alert('An error has occurred. Cannot display data');\n                });\n            });\n        }\n    });\n};"],"names":["async","document","addEventListener","event","target","classList","contains","clickedElement","promptId","getAttribute","sectionId","courseId","create","title","body","Templates","render","large","then","modal","show","loaderModal","ajax","call","methodname","args","done","results","hide","section_name","setTimeout","selectAllCheckbox","getElementById","checkboxes","querySelectorAll","forEach","checkbox","checked","createSubjectsButton","querySelector","section","selectedCheckboxes","subjects","subjectName","push","name","JSON","stringify","window","location","reload","fail","alert"],"mappings":"+aAKoBA,UAChBC,SAASC,iBAAiB,SAAS,SAAUC,UAErCA,MAAMC,OAAOC,UAAUC,SAAS,8CAA+C,KAC3EC,eAAiBJ,MAAMC,OAEvBI,SAAWD,eAAeE,aAAa,kBACvCC,UAAYH,eAAeE,aAAa,iBACxCE,SAAWJ,eAAeE,aAAa,iCAErCG,OAAO,CACTC,MAAO,GACPC,KAAMC,mBAAUC,OAAO,4BAA6B,IACpDC,OAAO,IACRC,MAAK,SAAUC,OACdA,MAAMC,WACFC,YAAcF,MAECG,cAAKC,KAAK,CAAC,CAC1BC,WAAY,0CACZC,KAAM,UACUd,kBACAH,mBACCE,cAIR,GAAGgB,MAAK,SAAUC,SAG3BN,YAAYO,sBAGNhB,OAAO,CACTC,MAAOc,QAAQE,aACff,KAAMC,mBAAUC,OAAO,iCAAkCW,SACzDV,OAAO,IACRC,MAAK,SAAUC,OAEdA,MAAMC,OAGNU,YAAW,eAEHC,kBAAoB9B,SAAS+B,eAAe,4CAC5CD,kBAAmB,KACfE,WAAahC,SAASiC,iBAAiB,sCAC3CH,kBAAkB7B,iBAAiB,UAAU,WACzC+B,WAAWE,SAAQ,SAAUC,UACzBA,SAASC,QAAUN,kBAAkBM,kBAQ7CC,qBAAuBrC,SAASsC,cAAc,8CAClDD,qBAAqBpC,iBAAiB,SAAS,WAE3CiB,MAAMS,sBAEAhB,OAAO,CACTC,MAAO,GACPC,KAAMC,mBAAUC,OAAO,4BAA6B,IACpDC,OAAO,IACRC,MAAK,SAAUC,OACdA,MAAMC,WAGFoB,QAAUF,qBAAqB7B,aAAa,gBAE5CgC,mBAAqBxC,SAASiC,iBAC9B,8CACAQ,SAAW,GACfD,mBAAmBN,SAAQ,SAAUC,cAE7BO,YAAcP,SAAS3B,aAAa,aAExCiC,SAASE,KAAK,CACVC,KAAMF,iBAMdD,SAAWI,KAAKC,UAAUL,UAEDpB,cAAKC,KAAK,CAAC,CAChCC,WAAY,wCACZC,KAAM,SACSe,iBACC7B,kBACA+B,aAID,GAAGhB,MAAK,WAEvBsB,OAAOC,SAASC,YACjBC,MAAK,WACJC,MAAM,0DAKnB,WAIRD,MAAK,WACJC,MAAM"}