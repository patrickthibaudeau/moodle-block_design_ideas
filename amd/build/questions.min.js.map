{"version":3,"file":"questions.min.js","sources":["../src/questions.js"],"sourcesContent":["import ModalFactory from 'core/modal_factory';\nimport {get_string as getString} from 'core/str';\nimport ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nexport const init = async () => {\n    document.addEventListener('click', function (event) {\n\n            if (event.target.classList.contains('block-design-ideas-btn-ai-call-questions')) {\n                var clickedElement = event.target;\n                // Get the data attributes\n                var promptId = clickedElement.getAttribute('data-prompt_id');\n                var sectionId = clickedElement.getAttribute('data-topic_id');\n                var courseId = clickedElement.getAttribute('data-course_id');\n\n                ModalFactory.create({\n                    title: '',\n                    body: Templates.render('block_design_ideas/loader', {}),\n                    large: false\n                }).then(function (modal) {\n                    modal.show();\n                    var loaderModal = modal;\n\n                    var get_subjects = ajax.call([{\n                        methodname: 'block_design_ideas_get_questions',\n                        args: {\n                            'courseid': courseId,\n                            'promptid': promptId,\n                            'sectionid': sectionId\n                        }\n                    }]);\n\n                    get_subjects[0].done(function (results) {\n\n                        // Close the modal\n                        loaderModal.hide();\n\n                        // Show results.generatedcontent in a modal\n                        ModalFactory.create({\n                            title: getString('questions_generator', 'block_design_ideas'),\n                            body: Templates.render('block_design_ideas/questions', results),\n                            large: true\n                        }).then(function (modal) {\n                            // Show Modal\n                            modal.show();\n\n                            // Set a timeout so that the element can be discovered in the DOM\n                            setTimeout(function () {\n                                // When thebutton with id block-design-ideas-btn-generate is clicked\n                                // Run an ajax call to generate the content\n                                var generateButton = document.getElementById('block-design-ideas-btn-generate');\n                                generateButton.addEventListener('click', function () {\n                                    // Get current button text\n                                    var buttonText = generateButton.innerHTML;\n                                    // Get the contetn from the form\n                                    var content = document.getElementById('block-design-ideas-content').value;\n                                    // Get the selected question type for element with id block-design-ideas-question-type\n                                    var questionType = document.getElementById('block-design-ideas-question-type').value;\n\n                                    // Replace the text of the button with a loading spinner\n                                    generateButton.innerHTML = '<span class=\"spinner-border spinner-border-sm\" ' +\n                                        'role=\"status\" aria-hidden=\"true\"></span>';\n                                    // Get generated questions\n                                    var get_questions = ajax.call([{\n                                        methodname: 'block_design_ideas_generate_questions',\n                                        args: {\n                                            'courseid': courseId,\n                                            'questiontype': questionType,\n                                            'content': content\n                                        }\n                                    }]);\n\n                                    get_questions[0].done(function (results) {\n                                        // Replace the text of the button with the original text\n                                        generateButton.innerHTML = buttonText;\n                                        // Insert the results into element with id block-design-ideas-generated-questions\n                                        var generatedContent = document.getElementById('block-design-ideas-generated-questions');\n                                        generatedContent.innerHTML = results.html;\n\n                                        setTimeout(function () {\n                                            // Select/Deselect the checkboxes if block-design-ideas-subject-select-all is checked\n                                            var selectAllCheckbox = document.getElementById('block-design-ideas-subject-select-all');\n                                            if (selectAllCheckbox) {\n                                                var checkboxes = document.querySelectorAll('.block-design-ideas-subject-select');\n                                                selectAllCheckbox.addEventListener('change', function () {\n                                                    checkboxes.forEach(function (checkbox) {\n                                                        checkbox.checked = selectAllCheckbox.checked;\n                                                    });\n                                                });\n                                            }\n\n                                        }, 1000);\n                                    });\n                                });\n\n                            }, 1000);\n                        });\n\n\n                    }).fail(function () {\n                        alert('An error has occurred. Cannot display data');\n                    });\n                });\n            }\n        }\n    );\n};"],"names":["async","document","addEventListener","event","target","classList","contains","clickedElement","promptId","getAttribute","sectionId","courseId","create","title","body","Templates","render","large","then","modal","show","loaderModal","ajax","call","methodname","args","done","results","hide","setTimeout","generateButton","getElementById","buttonText","innerHTML","content","value","questionType","html","selectAllCheckbox","checkboxes","querySelectorAll","forEach","checkbox","checked","fail","alert"],"mappings":"6dAKoBA,UAChBC,SAASC,iBAAiB,SAAS,SAAUC,UAEjCA,MAAMC,OAAOC,UAAUC,SAAS,4CAA6C,KACzEC,eAAiBJ,MAAMC,OAEvBI,SAAWD,eAAeE,aAAa,kBACvCC,UAAYH,eAAeE,aAAa,iBACxCE,SAAWJ,eAAeE,aAAa,yCAE9BG,OAAO,CAChBC,MAAO,GACPC,KAAMC,mBAAUC,OAAO,4BAA6B,IACpDC,OAAO,IACRC,MAAK,SAAUC,OACdA,MAAMC,WACFC,YAAcF,MAECG,cAAKC,KAAK,CAAC,CAC1BC,WAAY,mCACZC,KAAM,UACUd,kBACAH,mBACCE,cAIR,GAAGgB,MAAK,SAAUC,SAG3BN,YAAYO,8BAGChB,OAAO,CAChBC,OAAO,mBAAU,sBAAuB,sBACxCC,KAAMC,mBAAUC,OAAO,+BAAgCW,SACvDV,OAAO,IACRC,MAAK,SAAUC,OAEdA,MAAMC,OAGNS,YAAW,eAGHC,eAAiB7B,SAAS8B,eAAe,mCAC7CD,eAAe5B,iBAAiB,SAAS,eAEjC8B,WAAaF,eAAeG,UAE5BC,QAAUjC,SAAS8B,eAAe,8BAA8BI,MAEhEC,aAAenC,SAAS8B,eAAe,oCAAoCI,MAG/EL,eAAeG,UAAY,0FAGPX,cAAKC,KAAK,CAAC,CAC3BC,WAAY,wCACZC,KAAM,UACUd,sBACIyB,qBACLF,YAIL,GAAGR,MAAK,SAAUC,SAE5BG,eAAeG,UAAYD,WAEJ/B,SAAS8B,eAAe,0CAC9BE,UAAYN,QAAQU,KAErCR,YAAW,eAEHS,kBAAoBrC,SAAS8B,eAAe,4CAC5CO,kBAAmB,KACfC,WAAatC,SAASuC,iBAAiB,sCAC3CF,kBAAkBpC,iBAAiB,UAAU,WACzCqC,WAAWE,SAAQ,SAAUC,UACzBA,SAASC,QAAUL,kBAAkBK,iBAKlD,aAIZ,WAIRC,MAAK,WACJC,MAAM"}