{"version":3,"file":"questions.min.js","sources":["../src/questions.js"],"sourcesContent":["import Modal from 'core/modal';\nimport ModalEvents from 'core/modal_events';\nimport {get_string as getString} from 'core/str';\nimport ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nexport const init = async () => {\n    document.addEventListener('click', function (event) {\n\n            if (event.target.classList.contains('block-design-ideas-btn-ai-call-questions')) {\n                var clickedElement = event.target;\n                // Get the data attributes\n                var promptId = clickedElement.getAttribute('data-prompt_id');\n                var sectionId = clickedElement.getAttribute('data-topic_id');\n                var courseId = clickedElement.getAttribute('data-course_id');\n\n                var get_subjects = ajax.call([{\n                    methodname: 'block_design_ideas_get_questions',\n                    args: {\n                        'courseid': courseId,\n                        'promptid': promptId,\n                        'sectionid': sectionId\n                    }\n                }]);\n\n                get_subjects[0].done(function (results) {\n                    // Show results.generatedcontent in a modal\n                    Modal.create({\n                        title: getString('questions_generator', 'block_design_ideas'),\n                        body: Templates.render('block_design_ideas/questions', results),\n                        large: true\n                    }).then(function (modal) {\n                        // Show Modal\n                        modal.show();\n\n                        // Set a timeout so that the element can be discovered in the DOM\n                        setTimeout(function () {\n                            // When thebutton with id block-design-ideas-btn-generate is clicked\n                            // Run an ajax call to generate the content\n                            var generateButton = document.getElementById('block-design-ideas-btn-generate');\n\n                            generateButton.addEventListener('click', function () {\n                                // Get current button text\n                                var buttonText = generateButton.innerHTML;\n                                // Empty the generated content\n                                var generatedContent = document.getElementById('block-design-ideas-generated-questions');\n                                generatedContent.innerHTML = '';\n                                // Get the contetn from the form\n                                var content = document.getElementById('id_content').value;\n                                // Get the selected question type for element with id block-design-ideas-question-type\n                                var questionType = document.getElementById('id_question_type').value;\n\n                                // Replace the text of the button with a loading spinner\n                                generateButton.innerHTML = '<span class=\"spinner-border spinner-border-sm\" ' +\n                                    'role=\"status\" aria-hidden=\"true\"></span>';\n                                // Get generated questions\n                                var get_questions = ajax.call([{\n                                    methodname: 'block_design_ideas_generate_questions',\n                                    args: {\n                                        'courseid': courseId,\n                                        'questiontype': questionType,\n                                        'content': content\n                                    }\n                                }]);\n\n                                get_questions[0].done(function (results) {\n                                    // Replace the text of the button with the original text\n                                    generateButton.innerHTML = buttonText;\n                                    // Insert the results into element with id block-design-ideas-generated-questions\n                                    generatedContent.innerHTML = results.html;\n\n                                    setTimeout(function () {\n                                        // Select/Deselect the checkboxes if block-design-ideas-subject-select-all is checked\n                                        var selectAllCheckbox = document.getElementById('block-design-ideas-subject-select-all');\n                                        if (selectAllCheckbox) {\n                                            var checkboxes = document.querySelectorAll('.block-design-ideas-subject-select');\n                                            selectAllCheckbox.addEventListener('change', function () {\n                                                checkboxes.forEach(function (checkbox) {\n                                                    checkbox.checked = selectAllCheckbox.checked;\n                                                });\n                                            });\n                                        }\n                                        // When button with id block-design-ideas-btn-create-questions is clicked\n                                        // Run an ajax call to create the questions\n                                        var createButton = document.getElementById('block-design-ideas-btn-create-questions');\n                                        createButton.addEventListener('click', function () {\n                                            // Get create button text\n                                            var createButtonText = createButton.innerHTML;\n                                            // Get the selected checkboxes\n                                            var selectedCheckboxes = document.querySelectorAll(\n                                                '.block-design-ideas-subject-select:checked'\n                                            );\n                                            // Get the ids of the selected checkboxes\n                                            var selectedIds = [];\n                                            selectedCheckboxes.forEach(function (checkbox) {\n                                                // Add the data-gift attribute to the array\n                                                var gift = checkbox.getAttribute('data-gift');\n                                                selectedIds.push({question: gift});\n                                            });\n                                            // Replace the text of the button with a loading spinner\n                                            createButton.innerHTML = '<span class=\"spinner-border spinner-border-sm\" ' +\n                                                'role=\"status\" aria-hidden=\"true\"></span>';\n                                            // Json stringify the selectedIds array\n                                            selectedIds = JSON.stringify(selectedIds);\n                                            // Create questions\n                                            var create_questions = ajax.call([{\n                                                methodname: 'block_design_ideas_save_questions',\n                                                args: {\n                                                    'question_type': questionType,\n                                                    'courseid': courseId,\n                                                    'questions': selectedIds\n                                                }\n                                            }]);\n\n                                            create_questions[0].done(function () {\n                                                createButton.innerHTML = createButtonText;\n                                                // Reload page\n                                                alert('Questions created successfully');\n                                            });\n                                        });\n                                    });\n                                });\n                            });\n\n                            // We want to reset the form every time it is opened.\n                            modal.getRoot().on(ModalEvents.hidden, function() {\n                                // reload the page\n                                window.location.reload();\n                            });\n\n                        }, 1000);\n\n                    });\n\n\n                }).fail(function () {\n                    alert('An error has occurred. Cannot display data');\n                });\n\n            }\n        }\n    );\n};"],"names":["async","document","addEventListener","event","target","classList","contains","clickedElement","promptId","getAttribute","sectionId","courseId","ajax","call","methodname","args","done","results","create","title","body","Templates","render","large","then","modal","show","setTimeout","generateButton","getElementById","buttonText","innerHTML","generatedContent","content","value","questionType","html","selectAllCheckbox","checkboxes","querySelectorAll","forEach","checkbox","checked","createButton","createButtonText","selectedCheckboxes","selectedIds","gift","push","question","JSON","stringify","alert","getRoot","on","ModalEvents","hidden","window","location","reload","fail"],"mappings":"mhBAMoBA,UAChBC,SAASC,iBAAiB,SAAS,SAAUC,UAEjCA,MAAMC,OAAOC,UAAUC,SAAS,4CAA6C,KACzEC,eAAiBJ,MAAMC,OAEvBI,SAAWD,eAAeE,aAAa,kBACvCC,UAAYH,eAAeE,aAAa,iBACxCE,SAAWJ,eAAeE,aAAa,kBAExBG,cAAKC,KAAK,CAAC,CAC1BC,WAAY,mCACZC,KAAM,UACUJ,kBACAH,mBACCE,cAIR,GAAGM,MAAK,SAAUC,wBAErBC,OAAO,CACTC,OAAO,mBAAU,sBAAuB,sBACxCC,KAAMC,mBAAUC,OAAO,+BAAgCL,SACvDM,OAAO,IACRC,MAAK,SAAUC,OAEdA,MAAMC,OAGNC,YAAW,eAGHC,eAAiB3B,SAAS4B,eAAe,mCAE7CD,eAAe1B,iBAAiB,SAAS,eAEjC4B,WAAaF,eAAeG,UAE5BC,iBAAmB/B,SAAS4B,eAAe,0CAC/CG,iBAAiBD,UAAY,OAEzBE,QAAUhC,SAAS4B,eAAe,cAAcK,MAEhDC,aAAelC,SAAS4B,eAAe,oBAAoBK,MAG/DN,eAAeG,UAAY,0FAGPnB,cAAKC,KAAK,CAAC,CAC3BC,WAAY,wCACZC,KAAM,UACUJ,sBACIwB,qBACLF,YAIL,GAAGjB,MAAK,SAAUC,SAE5BW,eAAeG,UAAYD,WAE3BE,iBAAiBD,UAAYd,QAAQmB,KAErCT,YAAW,eAEHU,kBAAoBpC,SAAS4B,eAAe,4CAC5CQ,kBAAmB,KACfC,WAAarC,SAASsC,iBAAiB,sCAC3CF,kBAAkBnC,iBAAiB,UAAU,WACzCoC,WAAWE,SAAQ,SAAUC,UACzBA,SAASC,QAAUL,kBAAkBK,kBAM7CC,aAAe1C,SAAS4B,eAAe,2CAC3Cc,aAAazC,iBAAiB,SAAS,eAE/B0C,iBAAmBD,aAAaZ,UAEhCc,mBAAqB5C,SAASsC,iBAC9B,8CAGAO,YAAc,GAClBD,mBAAmBL,SAAQ,SAAUC,cAE7BM,KAAON,SAAShC,aAAa,aACjCqC,YAAYE,KAAK,CAACC,SAAUF,UAGhCJ,aAAaZ,UAAY,0FAGzBe,YAAcI,KAAKC,UAAUL,aAENlC,cAAKC,KAAK,CAAC,CAC9BC,WAAY,oCACZC,KAAM,eACeoB,sBACLxB,mBACCmC,gBAIJ,GAAG9B,MAAK,WACrB2B,aAAaZ,UAAYa,iBAEzBQ,MAAM,iDAQ1B3B,MAAM4B,UAAUC,GAAGC,sBAAYC,QAAQ,WAEnCC,OAAOC,SAASC,cAGrB,WAKRC,MAAK,WACJR,MAAM"}